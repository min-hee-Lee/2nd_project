#server
server.port=8090

#서버를 재시작
spring.devtools.livereload.enabled=true
spring.devtools.remote.restart.enabled=true




#세션 유지 시간 - 360000 뒤에 단위 표시를 하지 않으면 초단위이다.
#360000s == 60m : 1시간

#spring boot vertion 2.x
server.servlet.session.timeout=360000

#oracle
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:xe
spring.datasource.username=hr9
spring.datasource.password=a1234


#파일 업로드 경로 설정
spring.servlet.multipart.location=D:/k_digital/download/temp



#mybatis
#매퍼용 클래스가 위치한 경로
mybatis.type-aliases-package=com.example.shop.webCrawling.dto.images, com.example.shop.testDate.dto, com.example.shop.login.dto, com.example.shop.payments.dto,com.example.shop.wishList.dto, com.example.shop.chating.dto
#mybatis.type-aliases-package=com.example.shop.*.dto
				 
#mapper xml 파일이 위치한 경로
mybatis.mapper-locations=/mapper/TestMapper.xml, /mapper/testDataMapper.xml, /mapper/loginMapper.xml, /mapper/PayBookingMapper.xml, /mapper/wishMapper.xml, /mapper/ChatMapper.xml
#mybatis.mapper-locations=/mapper/*Mapper.xml

#configuration xml 파일이 위치한 경로
#mybatis.config=/configuration/confiuration.xml



# GOOGLE
spring.security.oauth2.client.registration.google.client-id=1041334679357-gjbrmgosh5frqf9lk9vp4gf6e6bjvoo3.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

#fackbook
spring.security.oauth2.client.registration.facebook.client-id=636148115002207
spring.security.oauth2.client.registration.facebook.client-secret=602b56ef5f4baba3d5e6b8c179bd923c
spring.security.oauth2.client.registration.facebook.scope=public_profile,email

#naver
# 구글이나 페이스북은 안적어도 되는데, 네이버나 카카오는 적어줘야함(기본 제공 provider가 아니기 때문에) 프로바이더는 주소 고정이고 밑에는 주소고정 아닌데 따라주는게 편함
spring.security.oauth2.client.registration.naver.client-id=f9WaUKgcogndFe21f93L
spring.security.oauth2.client.registration.naver.client-secret=kAQjsSZo7l
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8090/login/oauth2/code/naver

# Naver Provider 등록!
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
#네이버가 회원정보를 json으로 넘겨주는데, response라는 키값으로 리턴해준다.


# KAKAO
spring.security.oauth2.client.registration.kakao.client-id=	0c04a15d29b72b337c7b9af8b1e5b044
spring.security.oauth2.client.registration.kakao.client-secret=8EVJljZnEqEoC4jUAL5yhdWrAX1IcbWf
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8090/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST

## kAKAO Provider 등록!
spring.security.oauth2.client.provider.kakao.authorization-uri= https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
# 카카오가 회원정보를 json으로 넘겨주는데, id라는 키값으로 리턴해준다.


#Email 관련
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=eotjd858586@gmail.com
spring.mail.password=dsyqxqrcvepqgeai
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true